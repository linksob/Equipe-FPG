/*
*  lab02-01  Exercício 1
*


#include <GL/glut.h>
#include <math.h>

void display(void)
{
    /* clear all pixels  */
    glClear (GL_COLOR_BUFFER_BIT);


   //POLÍGONO
   glColor3f(0.0, 1.0, 1.0);
   glBegin(GL_POLYGON);
      glVertex3f (0.40, 0.30, 0.0);
      glVertex3f (-0.10, 0.55, 0.0);
      glVertex3f (0.15, 0.00, 0.0);
      glVertex3f (0.85, 0.07, 0.0);
      glVertex3f (0.75, 0.62, 0.0);
   glEnd();

   //CONTORNO
   glColor3f(0.0, 0.0, 0.0);
   glBegin(GL_LINE_LOOP);
      glVertex3f (0.40, 0.30, 0.0);
      glVertex3f (-0.10, 0.55, 0.0);
      glVertex3f (0.15, 0.00, 0.0);
      glVertex3f (0.85, 0.07, 0.0);
      glVertex3f (0.75, 0.62, 0.0);
   glEnd();

   glFlush ();

}

void init (void)
{
/* select clearing color 	*/
   glClearColor (1.0, 1.0, 1.0, 1.0);

/* initialize viewing values  */
   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   glOrtho(-1, 1, -1, 1, -1, 1);
}

/*
 * Declare initial window size, position, and display mode
 * (single buffer and RGBA).  Open window with "hello"
 * in its title bar.  Call initialization routines.
 * Register callback function to display graphics.
 * Enter main loop and process events.
 */
int main(int argc, char** argv)
{
   glutInit(&argc, argv);
   glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
   glutInitWindowSize (250, 250);
   glutInitWindowPosition (100, 100);
   glutCreateWindow ("hello");
   init ();
   glutDisplayFunc(display);
   glutMainLoop();
   return 0;   /* ANSI C requires main to return int. */
}
